name: Clean Up Branches

on:
  release:
    types: [published]

env:
  RELEASE_BRANCH: main
  EXCLUDE_BRANCHES: 'main' # comma separated list of branches to exclude; e.g. 'main,develop'

jobs:
  delete-merged-branches:
    name: Delete merged branches
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: ${{ env.RELEASE_BRANCH }}
          fetch-depth: 0

      - name: Get merged branches
        shell: bash
        run: |
          # all merged branches except current branch & release branch
          MERGED_BRANCHES=$(git branch --merged | grep -v "\*" | grep -v "${RELEASE_BRANCH}")

          # remove excluded branches
          #for branch in $(echo $EXCLUDE_BRANCHES | sed "s/,/ /g"); do
          #    MERGED_BRANCHES=$(echo $MERGED_BRANCHES | sed "s/$branch//g")
          #done

          # remove newlines
          BRANCHES_FOR_DEL=$(echo ${MERGED_BRANCHES//$'\n'/})

          echo "::notice::Branches to delete: $BRANCHES_FOR_DEL"
          echo "branches=${BRANCHES_FOR_DEL}" >> $GITHUB_ENV

          #for branch in $BRANCHES_FOR_DEL; do
          #    echo "::warning::Branch $branch was at $(git rev-parse $branch)"
          #done

      - name: Delete merged branches
        if: env.branches != ''
        run: |
          git push origin --delete ${{ env.branches }}